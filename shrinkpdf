#!/bin/bash

set -e

show_help() {
  echo ""
  echo "üìù Usage: $0 input.pdf output.pdf [--quality N] [--resize PERCENT]"
  echo ""
  echo "Positional Arguments:"
  echo "  input.pdf         Path to the original scanned PDF file"
  echo "  output.pdf        Path where the compressed PDF will be saved"
  echo ""
  echo "Optional Flags:"
  echo "  --quality N       JPEG quality (1‚Äì100), default: 40"
  echo "  --resize PERCENT  Resize images, e.g. 50 = scale to 50%, default: 100"
  echo ""
  echo "Examples:"
  echo "  $0 myscan.pdf smaller.pdf"
  echo "  $0 myscan.pdf smaller.pdf --quality 30"
  echo "  $0 myscan.pdf smaller.pdf --quality 35 --resize 50"
  echo ""
  echo "üìå Tips for --quality:"
  echo "  60‚Äì80  ‚û§ High quality, larger file size"
  echo "  40‚Äì60  ‚û§ Balanced quality and compression (recommended)"
  echo "  20‚Äì40  ‚û§ Smaller, still readable for text"
  echo "  10‚Äì20  ‚û§ Very small, may affect readability"
  echo ""
  echo "üìè Tips for --resize:"
  echo "  100    ‚û§ Original size (default)"
  echo "   50    ‚û§ Shrinks each page to half"
  echo "   75    ‚û§ Reduces size by 25%"
  echo ""
  echo "Dependencies: pdfimages, mogrify, img2pdf (install via Homebrew)"
  echo ""
  exit 0
}

check_tool() {
  if ! command -v "$1" &> /dev/null; then
    echo "‚ùå Missing tool: $1"
    read -p "   ‚û§ Do you want to install $1 with Homebrew? [y/N] " reply
    if [[ "$reply" =~ ^[Yy]$ ]]; then
      brew install "$2"
    else
      echo "Aborting. Please install $1 manually."
      exit 1
    fi
  fi
}

# Parse args
if [[ "$1" == "--help" || "$1" == "-h" || $# -lt 2 ]]; then
  show_help
fi

INPUT_PDF="$1"
OUTPUT_PDF="$2"
shift 2

JPEG_QUALITY=40
RESIZE_PERCENT=100

while [[ $# -gt 0 ]]; do
  case "$1" in
    --quality)
      JPEG_QUALITY="$2"
      shift 2
      ;;
    --resize)
      RESIZE_PERCENT="$2"
      shift 2
      ;;
    *)
      echo "‚ùå Unknown option: $1"
      show_help
      ;;
  esac
done

# Validate input values
if ! [[ "$JPEG_QUALITY" =~ ^[0-9]+$ ]] || (( JPEG_QUALITY < 1 || JPEG_QUALITY > 100 )); then
  echo "‚ùå --quality must be an integer between 1 and 100"
  exit 1
fi

if ! [[ "$RESIZE_PERCENT" =~ ^[0-9]+$ ]] || (( RESIZE_PERCENT < 10 || RESIZE_PERCENT > 500 )); then
  echo "‚ùå --resize must be an integer between 10 and 500"
  exit 1
fi

if [[ ! -f "$INPUT_PDF" ]]; then
  echo "‚ùå Input file not found: $INPUT_PDF"
  exit 1
fi

# Check dependencies
check_tool "pdfimages" "poppler"
check_tool "mogrify" "imagemagick"
check_tool "img2pdf" "img2pdf"

# Temporary working directory
WORKDIR="$(mktemp -d)"
echo "üìÇ Working in: $WORKDIR"
cd "$WORKDIR"

echo "üì• Extracting JPEG images from: $INPUT_PDF ..."
pdfimages -j "$OLDPWD/$INPUT_PDF" page

echo "üéõÔ∏è Recompressing images to JPEG quality: $JPEG_QUALITY ..."
mogrify -quality "$JPEG_QUALITY" *.jpg

if [[ "$RESIZE_PERCENT" -ne 100 ]]; then
  echo "üìè Resizing images to: ${RESIZE_PERCENT}% ..."
  mogrify -resize "${RESIZE_PERCENT}%" *.jpg
else
  echo "üìè Skipping resize (100%)"
fi

echo "üì¶ Rebuilding compressed PDF: $OUTPUT_PDF ..."
img2pdf *.jpg -o "$OLDPWD/$OUTPUT_PDF"

echo "‚úÖ Done! Compressed PDF saved to: $OUTPUT_PDF"

# Uncomment to clean up:
# rm -r "$WORKDIR"
